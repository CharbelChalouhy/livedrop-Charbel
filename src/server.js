import express from 'express';import cors from 'cors';import helmet from 'helmet';import morgan from 'morgan';import dotenv from 'dotenv';import { connectDB } from './db.js';import customers from './routes/customers.js';import products from './routes/products.js';import orders from './routes/orders.js';import analytics from './routes/analytics.js';import dashboard from './routes/dashboard.js';import orderStatusSSE from './sse/order-status.js';import { handleAssistantQuery } from './assistant/engine.js';dotenv.config();const app=express();app.use(helmet());app.use(cors());app.use(express.json());app.use(morgan('dev'));app.get('/api/health',(req,res)=>res.json({ok:true,ts:new Date().toISOString()}));app.use('/api/customers',customers);app.use('/api/products',products);app.use('/api/orders',orders);app.use('/api/analytics',analytics);app.use('/api/dashboard',dashboard);app.get('/api/orders/:id/stream',orderStatusSSE);app.post('/api/assistant',async(req,res)=>{try{const{text}=req.body||{};const ans=await handleAssistantQuery(text||'');res.json(ans);}catch(e){res.status(500).json({error:'assistant_error',details:e.message});}});const port=process.env.PORT||8080;await connectDB();app.listen(port,()=>console.log(`[API] listening on :${port}`));